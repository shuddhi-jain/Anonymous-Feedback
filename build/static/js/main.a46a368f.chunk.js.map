{"version":3,"sources":["AdminLogin.js","appwrite.js","AdminPanel.js","FeedbackForm.js","UserAuth.js","App.js","reportWebVitals.js","index.js"],"names":["client","Client","setEndpoint","setProject","account","Account","AdminLogin","email","setEmail","useState","password","setPassword","message","setMessage","navigate","useNavigate","console","log","React","createElement","onSubmit","async","e","preventDefault","createSession","error","type","value","onChange","target","placeholder","required","databases","Databases","AdminPanel","feedbackList","setFeedbackList","loading","setLoading","startDate","setStartDate","endDate","setEndDate","fetchFeedback","response","listDocuments","documents","useEffect","onClick","filter","feedback","feedbackDate","Date","timestamp","isAfterStart","isBeforeEnd","map","key","$id","feedback_text","toLocaleString","window","confirm","deleteDocument","id","handleDelete","FeedbackForm","feedbackText","setFeedbackText","user","setUser","userInfo","get","checkAuth","createDocument","toISOString","userId","alert","UserAuth","isLogin","setIsLogin","length","session","create","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a46a368f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Client, Account } from 'appwrite';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst client = new Client();\r\n\r\nclient\r\n  .setEndpoint('https://cloud.appwrite.io/v1') // Your Appwrite Endpoint\r\n  .setProject('66fa9856001dec597c51');              // Your project ID\r\n\r\nconst account = new Account(client);\r\n\r\nfunction AdminLogin() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate(); // Hook to programmatically navigate\r\n\r\n\r\n  console.log('Email:', email);\r\nconsole.log('Password:', password);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await account.createSession(email, password);\r\n      setMessage('Login successful!');\r\n      navigate('/admin'); // Navigate to the Admin Panel after successful login\r\n    } catch (error) {\r\n      setMessage('Error logging in. Please check your credentials.');\r\n      console.error('Login error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Login</h1>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminLogin;\r\n","import { Client, Account, Databases } from 'appwrite';\r\n\r\nconst client = new Client();\r\n\r\nclient\r\n.setEndpoint('https://cloud.appwrite.io/v1')\r\n// Appwrite Cloud endpoint\r\n    .setProject('66fa9856001dec597c51');  \r\n           // Your actual Project ID\r\n\r\n           export const account = new Account(client);\r\n\r\nconst databases = new Databases(client);\r\n\r\nexport { client, databases };\r\n","import React, { useEffect, useState } from 'react';\r\nimport { databases } from './appwrite';\r\n\r\nfunction AdminPanel() {\r\n  const [feedbackList, setFeedbackList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  const fetchFeedback = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await databases.listDocuments(\r\n        '66fa98c90015e4e80a0e',  // Replace with your Feedback Database ID\r\n        '66fa98d4000f2c8918ae'  // Replace with your Feedback Collection ID\r\n      );\r\n      setFeedbackList(response.documents);\r\n    } catch (error) {\r\n      console.error('Error fetching feedback:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this feedback?')) {\r\n      try {\r\n        await databases.deleteDocument(\r\n          '66fa98c90015e4e80a0e',  // Replace with your Feedback Database ID\r\n          '66fa98d4000f2c8918ae', // Replace with your Feedback Collection ID\r\n          id                        // Document ID to delete\r\n        );\r\n        fetchFeedback(); // Refresh the feedback list after deletion\r\n      } catch (error) {\r\n        console.error('Error deleting feedback:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFeedback(); // Fetch feedback when component mounts\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Panel - Feedback List</h1>\r\n  \r\n      <div>\r\n        <label>Start Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          value={startDate}\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n        />\r\n        <label>End Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          value={endDate}\r\n          onChange={(e) => setEndDate(e.target.value)}\r\n        />\r\n        <button onClick={fetchFeedback}>Filter</button>\r\n      </div>\r\n  \r\n      <ul>\r\n        {feedbackList\r\n          .filter(feedback => {\r\n            const feedbackDate = new Date(feedback.timestamp);\r\n            const isAfterStart = startDate ? feedbackDate >= new Date(startDate) : true;\r\n            const isBeforeEnd = endDate ? feedbackDate <= new Date(endDate) : true;\r\n            return isAfterStart && isBeforeEnd;\r\n          })\r\n          .map((feedback) => (\r\n            <li key={feedback.$id}>\r\n              <p><strong>Feedback:</strong> {feedback.feedback_text}</p>\r\n              <p><strong>Submitted on:</strong> {new Date(feedback.timestamp).toLocaleString()}</p>\r\n              <button onClick={() => handleDelete(feedback.$id)}>Delete</button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default AdminPanel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { databases, account } from './appwrite';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction FeedbackForm() {\r\n  const [feedbackText, setFeedbackText] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in\r\n    const checkAuth = async () => {\r\n      try {\r\n        const userInfo = await account.get();\r\n        setUser(userInfo);  // Set user state if logged in\r\n      } catch (error) {\r\n        console.error('Not authenticated', error);\r\n        navigate('/auth');  // Redirect to login if not authenticated\r\n      }\r\n    };\r\n    checkAuth();\r\n  }, [navigate]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!feedbackText) return;\r\n    \r\n    try {\r\n      await databases.createDocument(\r\n        '66fa98c90015e4e80a0e',  // Replace with your Feedback Database ID\r\n        '66fa98d4000f2c8918ae', // Replace with your Feedback Collection ID\r\n        {\r\n          feedback_text: feedbackText,\r\n          timestamp: new Date().toISOString(),\r\n          userId: user.$id  // Associate feedback with user\r\n        }\r\n      );\r\n      setFeedbackText('');\r\n      alert('Feedback submitted successfully!');\r\n    } catch (error) {\r\n      console.error('Error submitting feedback:', error);\r\n    }\r\n  };\r\n\r\n  if (!user) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Submit Feedback</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          value={feedbackText}\r\n          onChange={(e) => setFeedbackText(e.target.value)}\r\n          placeholder=\"Enter your feedback\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FeedbackForm;\r\n","import React, { useState } from 'react';\r\nimport { Client, Account } from 'appwrite';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst client = new Client();\r\n\r\nclient\r\n  .setEndpoint('https://cloud.appwrite.io/v1')  // Your Appwrite Endpoint\r\n  .setProject('66fa9856001dec597c51');               // Your project ID\r\n\r\nconst account = new Account(client);\r\n\r\nfunction UserAuth() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const navigate = useNavigate();  // For navigation\r\n\r\n  const handleAuth = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!password || password.length < 6) {\r\n        setMessage('Password must be at least 6 characters long.');\r\n        return;\r\n      }\r\n\r\n    try {\r\n      if (isLogin) {\r\n        // User login\r\n        const session = await account.createSession(email, password);\r\n        console.log('Session:', session);\r\n        setMessage('Login successful!');\r\n        navigate('/');\r\n      } else {\r\n        // User registration with auto-generated unique user ID\r\n        const user = await account.create('unique()', email, password); // Ensures the userId is automatically generated\r\n        console.log('User:', user);\r\n        setMessage('Registration successful! You can now log in.');\r\n      }\r\n    } catch (error) {\r\n      setMessage(`Error: ${error.message}`);\r\n      console.error('Auth error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{isLogin ? 'User Login' : 'User Registration'}</h1>\r\n      <form onSubmit={handleAuth}>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <button type=\"submit\">{isLogin ? 'Login' : 'Register'}</button>\r\n      </form>\r\n      <p>{message}</p>\r\n      <button onClick={() => setIsLogin(!isLogin)}>\r\n        {isLogin ? 'Switch to Registration' : 'Switch to Login'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserAuth;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport AdminLogin from './AdminLogin';\nimport AdminPanel from './AdminPanel';\nimport FeedbackForm from './FeedbackForm';\nimport UserAuth from './UserAuth';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<FeedbackForm />} /> {/* Main feedback form */}\n        <Route path=\"/admin\" element={<AdminPanel />} /> {/* Admin panel */}\n        <Route path=\"/login\" element={<AdminLogin />} /> {/* Admin login */}\n        <Route path=\"/auth\" element={<UserAuth />} /> {/* User authentication */}\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}